// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Undefined Team",
            "url": "https://github.com/go-park-mail-ru/2025_2_Undefined"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/chats": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список всех чатов текущего пользователя с информацией о последнем сообщении",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Получить список чатов",
                "responses": {
                    "200": {
                        "description": "Список чатов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ChatViewInformationDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorDTO"
                        }
                    },
                    "401": {
                        "description": "Неавторизованный доступ",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorDTO"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создает новый чат с указанными участниками и настройками",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Создать новый чат",
                "parameters": [
                    {
                        "description": "Данные для создания чата",
                        "name": "chat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ChatCreateInformationDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID созданного чата",
                        "schema": {
                            "$ref": "#/definitions/dto.IdDTO"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorDTO"
                        }
                    },
                    "401": {
                        "description": "Неавторизованный доступ",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorDTO"
                        }
                    }
                }
            }
        },
        "/chats/{chatId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает детальную информацию о конкретном чате, включая сообщения и участников",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Получить информацию о чате",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID чата",
                        "name": "chatId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Детальная информация о чате",
                        "schema": {
                            "$ref": "#/definitions/dto.ChatDetailedInformationDTO"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorDTO"
                        }
                    },
                    "401": {
                        "description": "Неавторизованный доступ",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorDTO"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Аутентифицирует пользователя по номеру телефона и паролю, возвращает JWT токен в cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Аутентификация пользователя",
                "parameters": [
                    {
                        "description": "Креденшиалы для входа",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Вход выполнен успешно"
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "schema": {
                            "$ref": "#/definitions/dto.ValidationErrorsDTO"
                        }
                    },
                    "401": {
                        "description": "Неверные креденшиалы",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorDTO"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Аннулирует текущий JWT токен и удаляет cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Выход из системы",
                "responses": {
                    "200": {
                        "description": "Logout successful"
                    },
                    "401": {
                        "description": "Неавторизованный доступ",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorDTO"
                        }
                    }
                }
            }
        },
        "/me": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает полные данные о текущем авторизованном пользователе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Получить информацию о текущем пользователе",
                "responses": {
                    "200": {
                        "description": "Информация о пользователе",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "401": {
                        "description": "Неавторизованный доступ",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorDTO"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Регистрирует нового пользователя в системе и возвращает JWT токен в cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Регистрация пользователя",
                "parameters": [
                    {
                        "description": "Данные для регистрации",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Пользователь успешно зарегистрирован"
                    },
                    "400": {
                        "description": "Ошибки валидации",
                        "schema": {
                            "$ref": "#/definitions/dto.ValidationErrorsDTO"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ChatCreateInformationDTO": {
            "type": "object",
            "properties": {
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserInfoChatDTO"
                    }
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "description": "Тип чата - 0 канал, 1 диалог, 2 группа",
                    "type": "integer",
                    "enum": [
                        0,
                        1,
                        2
                    ]
                }
            }
        },
        "dto.ChatDetailedInformationDTO": {
            "type": "object",
            "properties": {
                "can_chat": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "is_admin": {
                    "type": "boolean"
                },
                "is_member": {
                    "type": "boolean"
                },
                "is_private": {
                    "type": "boolean"
                },
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.UserInfoChatDTO"
                    }
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.MessageDTO"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.ChatViewInformationDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "last_message": {
                    "$ref": "#/definitions/dto.MessageDTO"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.ErrorDTO": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.IdDTO": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "dto.MessageDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "sender": {
                    "type": "string",
                    "format": "uuid"
                },
                "string": {
                    "type": "string"
                }
            }
        },
        "dto.UserInfoChatDTO": {
            "type": "object",
            "properties": {
                "role": {
                    "description": "Роль пользователя в чате - 0 админ(писать и добавлять участников), 1 участник(писать), 2 зритель (только просмотр)",
                    "type": "integer",
                    "enum": [
                        0,
                        1,
                        2
                    ]
                },
                "user_id": {
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "dto.ValidationErrorDTO": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "dto.ValidationErrorsDTO": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ValidationErrorDTO"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "phone_number"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "models.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "phone_number",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "phone_number": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "account_type": {
                    "type": "integer"
                },
                "bio": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Undefined team API documentation of project Telegram",
	Description:      "API сервер для чат-приложения в стиле Telegram. Позволяет регистрировать пользователей, управлять чатами и обмениваться сообщениями.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
